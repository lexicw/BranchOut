@page "/manage/gradients"
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Components.QuickGrid.EntityFrameworkAdapter

@inject IGradientRepository _gradientRepository

@if (IsProcessing)
{
    <Spinner />
}
else
{
    <div class="container py-5">
        <div class="table-border bg-white mb-5">
            <div class="row mx-2">
                <div class="col-5">
                    <h3 class="pt-2 fs-5 fw-bold">Gradients</h3>
                    <p class="text-muted fs-6 pb-3">Manage gradients that will be used on profile pages here.</p>
                </div>
                <div class="col-5">
                    <SearchBar SearchItemCallback="SearchGradients" />
                </div>
                <div class="col-2 align-content-start">
                    <button class="btn btn-primary float-end mt-2">Add New</button>
                </div>
            </div>

            <QuickGrid Items="gradients" Class="table mx-auto quickgrid-align" Pagination="pagination">
                <TemplateColumn>
                    <HeaderTemplate>
                        <SelectAllCheckbox Items="gradients" IsAllSelected="@isAllSelected" SetIsSelected="SetGradientSelected" IsAllSelectedChanged="@((value) => isAllSelected = value)" />
                    </HeaderTemplate>
                    <ChildContent>
                    <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" @bind="@(context.IsSelected)">
                    </div>
                    </ChildContent>
                </TemplateColumn>
                

                <PropertyColumn Property="@(p => p.Id)" Sortable="true" />
                <TemplateColumn Title="Preview" Context="gradient" Class="text-center">
                    <div class="border border-1 @(gradient.CssClass)" alt="Gradient preview" style="width:60px; height:60px;" />
                </TemplateColumn>
                <PropertyColumn Property="@(p => p.Value)" Sortable="true" />
                <PropertyColumn Property="@(p => p.CssClass)" />

                <TemplateColumn Context="gradient">
                    <a class="btn btn-light" href="@($"gradients/edit?id={gradient.Id}")">Edit</a> &nbsp;
                    <a class="btn btn-light" href="@($"gradients/delete?id={gradient.Id}")">Delete</a>
                </TemplateColumn>
            </QuickGrid>
            <Paginator State="pagination" />
        </div>
    </div>
}


@code {
    private IQueryable<Gradient>? gradients;
    private bool IsProcessing { get; set; } = true;
    private bool isAllSelected = false;

    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

    protected override async Task OnInitializedAsync()
    {
        gradients = await _gradientRepository.GetAllAsync();
        IsProcessing = false;
    }

    private void ToggleSelectAll()
    {
        isAllSelected = !isAllSelected;

        foreach (var gradient in gradients)
        {
            gradient.IsSelected = isAllSelected;
        }
    }

    private void SetGradientSelected(Gradient gradient, bool selected)
    {
        gradient.IsSelected = selected;
    }

    private async Task SearchGradients(string searchFilter)
    {
        var searchResults = await _gradientRepository.GetAllAsync(searchFilter);
        gradients = searchResults;
    }

}
