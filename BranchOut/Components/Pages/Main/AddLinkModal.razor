@inject ILinkRepository _linkRepository
@inject UserService _userService

<div class="modal fade" id="addLinkModal" tabindex="-1" aria-labelledby="addLinkModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="addLinkModalLabel">Add New Link</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <EditForm Model="@link" FormName="formAddLink" OnValidSubmit="Submit">
                <div class="modal-body">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <label>Name:</label>
                    <FieldComponent Label="Name">
                        <ValidationControl>
                            <ValidationMessage For="() => link.Name" class="text-danger"></ValidationMessage>
                        </ValidationControl>
                        <Control>
                            <InputText @bind-Value="link.Name" class="form-control"></InputText>
                        </Control>
                    </FieldComponent>
                    <label class="mt-2">URL:</label>
                    <FieldComponent Label="URL">
                        <ValidationControl>
                            <ValidationMessage For="() => link.URL" class="text-danger"></ValidationMessage>
                        </ValidationControl>
                        <Control>
                            <InputText @bind-Value="link.URL" class="form-control"></InputText>
                        </Control>
                    </FieldComponent>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Add Link</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public EventCallback<bool> ModalClose { get; set; }

    private Link link = new();


    private async Task InsertLink()
    {
        var currentUser = await _userService.GetCurrentUserAsync();
        if (currentUser == null)
        {
            return;
        }
        var userId = currentUser.Id;

        await _linkRepository.CreateAsync(link, userId);
        await ModalClose.InvokeAsync(true);
    }

    private async void Submit()
    {
        await InsertLink();
    }
}
