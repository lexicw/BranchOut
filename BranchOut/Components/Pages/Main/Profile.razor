@page "/profile"

@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject IProfileRepository _profileRepository
@inject UserService _userService


<div class="mt-5 w-75 mx-auto">
    <h1 class="fs-4">Profile</h1>
    <div class="shadow-sm rounded-3 bg-white w-100 p-5">
        <h2 class="fs-6">Image:</h2>
        <div class="position-relative mx-auto" style="width:150px;height:150px;">
            <div class="position-absolute" style="right:0;bottom:0;">
                <button class="btn btn-primary">
                    <i class="bi bi-image"></i>
                </button>
            </div>
            <svg class="bd-placeholder-img" width="150px" height="150px" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false">
                <rect width="100%" height="100%" fill="lightgray" />
                <text x="50%" y="50%" dy=".4em" text-anchor="middle" font-size="50" fill="black">
                    @UserName?.Substring(0, 1).ToUpper()
                </text>
            </svg>
        </div>
        <div class="mt-5">
            <div class="fs-6">Message:</div>
            <div class="mx-auto">
                <textarea class="form-control" placeholder="Leave a comment here" id="txtMessage" style="height: 100px">@profile.Message</textarea>
            </div>
        </div>
    </div>


    <h1 class="fs-4 mt-5">Theme</h1>

    <div class="shadow-sm rounded-3 bg-white w-100 p-5 mb-5">
        <div class="radio-cards">
            <label class="radio-card">
                <input name="plan" class="radio" type="radio" checked>
                <span class="radio-card-body">
                    <br/>
                    Choice 1
                </span>
            </label>
            <label class="radio-card">
                <input name="plan" class="radio" type="radio">
                <span class="radio-card-body" aria-hidden="true">
                    <br />
                    Choice 2
                </span>
            </label>
            <label class="radio-card">
                <input name="plan" class="radio" type="radio">
                <span class="radio-card-body" aria-hidden="true">
                    <br />
                    Choice 3
                </span>
            </label>
            <label class="radio-card">
                <input name="plan" class="radio" type="radio" checked>
                <span class="radio-card-body">
                    <br />
                    Choice 4
                </span>
            </label>
            <label class="radio-card">
                <input name="plan" class="radio" type="radio" checked>
                <span class="radio-card-body">
                    <br />
                    Choice 5
                </span>
            </label>
            <label class="radio-card">
                <input name="plan" class="radio" type="radio" checked>
                <span class="radio-card-body">
                    <br />
                    Choice 6
                </span>
            </label>
        </div>
    </div>


</div>


@code {
    [Parameter]
    public string? UserName { get; set; }

    public BranchOut.Data.Profile? profile { get; set; } = new BranchOut.Data.Profile();

    private bool UserExists { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadProfile();
    }

    private async void RefreshProfile()
    {
        await LoadProfile();
        StateHasChanged();
    }

    private async Task LoadProfile()
    {
        var currentUser = await _userService.GetCurrentUserAsync();
        UserName = currentUser.UserName;
        if (currentUser == null)
            return;

        var userId = currentUser.Id.ToString();
        profile = await _profileRepository.GetAsync(userId);
    }
}
